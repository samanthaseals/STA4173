---
title: "Two-Way ANOVA"
subtitle: "STA4173: Biostatistics"
execute:
  echo: true
format: 
  revealjs:
    theme: uwf
    self-contained: true
    slide-number: false
    footer: "[STA4173 - Biostatistics](https://samanthaseals.github.io/STA4173)"
    width: 1600
    height: 900
    df-print: paged
    html-math-method: katex
editor: source
---

## Introduction

- Previously, we discussed two-way ANOVA.

- We learned how to:

    - Create an ANOVA model with an interaction term
    - Test the interaction term
    - Create an ANOVA model without an interaction term
    - Test the main effects
    
- Today we will learn how to best communicate results, whether it's the resulting interaction term or main effects.

## Introduction

- Remember, interactions mean that the relationship between the outcome and one factor depend on the level of another factor.

    - e.g., the relationship between grade in General Chemistry I and classification (freshman, sophomore, junior, or senior) depends on the level of major (STEM, non-STEM)

- Now, we want to pry inside of the interaction so that we can communicate its meaning to non-statisticians/non-data scientists.

## Example

- Recall the example from last lecture.

- We examined the effect of diet and age of mothers on the average birth weight (in ounces). 

```{r, message = FALSE, warning = FALSE}
library(tidyverse)
birthweight <- c(157.78, 136.79, 138.84, 139.72, 125.47, 117.14, 129.35, 110.73, 118.38,
                 137.07, 146.28, 130.27, 117.46, 128.54, 99.16, 97.43, 125.26, 115.42) 
diet <- as.factor(c(rep(c(rep(1, 3), rep(2, 3), rep(3, 3)), 2)))
age <- as.factor(c(rep(20, 9), rep(30, 9)))
data <- tibble(birthweight, diet, age)
```

## Example

- Further, recall that we determined there was not an interaction between maternal diet and age,

```{r}
m <- aov(birthweight ~ diet + age + diet:age, data = data)
summary(m)
```

## Example

- But there was a main effect of diet.

```{r}
m <- aov(birthweight ~ diet + age, data = data)
summary(m)
```

## Profile Plots

- If we detect an interaction term, we must give meaning to it.

- An easy way to do this is to plot the treatment group means to visualize the interaction. This is called a profile plot.

    - *y*-axis: always the average outcome
    
    - *x*-axis: either factor A or B
    
        - if only one factor is ordinal, use it for the *x*-axis
        
        - if there are two ordinal or two nominal factors, select the factor with the largest number of levels for the *x*-axis
        
    - lines on the plot: the factor that was not selected for the *x*-axis
    
- Note that this is just a graph of the means -- it's valid to construct a profile plot even if the interaction is not sigificant.

## Example

- Let's first find the treatment means for the birth weight data,

```{r, echo = TRUE, warning = FALSE, message = FALSE}
means <- data %>%
  group_by(diet, age) %>%
  summarize(mean = mean(birthweight)) %>%
  ungroup()
head(means)
```

## Example

- The average birth weight will go on our *y*-axis.

- Because only maternal age is ordinal, it will go on our *x*-axis.

- Thus, the lines will represent the diet

    - This means I want to restructure the dataset with the means to have a column for each of the diets

```{r, echo = TRUE}
A <- means %>% filter(diet == 1) %>% rename(d1 = mean) %>% select(-diet)
B <- means %>% filter(diet == 2) %>% rename(d2 = mean) %>% select(-diet)
C <- means %>% filter(diet == 3) %>% rename(d3 = mean) %>% select(-diet)
graph <- full_join(A, B, by = "age")
graph <- full_join(graph, C, by = "age")
head(graph)
```

## Example

- Building profile plots using `ggplot()` is a process.

    - First, include a `geom_line()` for each level of the factor creating the lines.
    
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "pink") + # diet 1
  geom_line(aes(y = d2), color = "purple") + # diet 2
  geom_line(aes(y = d3), color = "blue") + # diet 3
  theme_bw()
```

## Example

<center>
```{r, eval = TRUE, echo = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "pink") + # diet 1
  geom_line(aes(y = d2), color = "purple") + # diet 2
  geom_line(aes(y = d3), color = "blue") + # diet 3
  theme_bw()
```
</center>

## Example

- Building profile plots using `ggplot()` is a process.

    - Then, add `geom_text()` to label each line (use the line colors to make sure everything is labeled properly).
 
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "pink") + # diet 1
  geom_line(aes(y = d2), color = "purple") + # diet 2
  geom_line(aes(y = d3), color = "blue") + # diet 3 
  geom_text(aes(x = "30" , y = 137, label = "Diet 1"), color = "pink")  + # diet 1
  geom_text(aes(x = "30" , y = 115, label = "Diet 2"), color = "purple")  + # diet 2
  geom_text(aes(x = "30" , y = 110, label = "Diet 3"), color = "blue")  + # diet 3
  theme_bw()
```

## Example

<center>
```{r, eval= TRUE, echo = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "pink") + # diet 1
  geom_line(aes(y = d2), color = "purple") + # diet 2
  geom_line(aes(y = d3), color = "blue") + # diet 3+ 
  geom_text(aes(x = "30" , y = 137, label = "Diet 1"), color = "pink")  + # diet 1
  geom_text(aes(x = "30" , y = 115, label = "Diet 2"), color = "purple")  + # diet 2
  geom_text(aes(x = "30" , y = 110, label = "Diet 3"), color = "blue")  + # diet 3
  theme_bw()
```
</center>

## Example

- Building profile plots using `ggplot()` is a process.

    - Then, clean up time:
    
        - Fix axis titles
        - Change line colors to black*
    
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "black") + # diet 1
  geom_line(aes(y = d2), color = "black") + # diet 2
  geom_line(aes(y = d3), color = "black") + # diet 3+ 
  geom_text(aes(x = "30" , y = 137, label = "Diet 1"), color = "black")  + # diet 1
  geom_text(aes(x = "30" , y = 115, label = "Diet 2"), color = "black")  + # diet 2
  geom_text(aes(x = "30" , y = 110, label = "Diet 3"), color = "black")  + # diet 3
  labs(x = "Maternal Age",
       y = "Average Birth Weight") +
  theme_bw()
```

## Example

<center>
```{r, eval = TRUE, echo = FALSE}
graph %>% 
  ggplot(aes(x = age, group = 1)) +
  geom_line(aes(y = d1), color = "black") + # diet 1
  geom_line(aes(y = d2), color = "black") + # diet 2
  geom_line(aes(y = d3), color = "black") + # diet 3+ 
  geom_text(aes(x = "30" , y = 137, label = "Diet 1"), color = "black")  + # diet 1
  geom_text(aes(x = "30" , y = 115, label = "Diet 2"), color = "black")  + # diet 2
  geom_text(aes(x = "30" , y = 110, label = "Diet 3"), color = "black")  + # diet 3
  labs(x = "Maternal Age",
       y = "Average Birth Weight") +
  theme_bw()
```
</center>

## Posthoc Tests

- We can also apply posthoc testing to two-way ANOVA.

    - If the interaction is significant, we can compare all treatment groups.
    
    - If the interaction is not significant, we can look at the main effects.
    
- For simplicity, we will only look at Tukey's and Fisher's.

- What is the difference between Tukey's and Fisher's?
    
## Posthoc Tests

- We can also apply posthoc testing to two-way ANOVA.

    - If the interaction is significant, we can compare all treatment groups.
    
    - If the interaction is not significant, we can look at the main effects.
    
- For simplicity, we will only look at Tukey's and Fisher's.

- What is the difference between Tukey's and Fisher's?

    - <font color="#db0b9d">Both perform all pairwise comaprisons.</font>
    
    - <font color="#db0b9d">Tukey's adjusts $\alpha$ while Fisher's does not.</font>
    
## Example

- Let's apply Tukey's to the model with the interaction term.

    - **Important!!** Remember that we are only doing this for illustration purposes - we should not perform posthoc testing on something non-significant.
    
```{r}
m <- aov(birthweight ~ diet + age + diet:age, data = data)
TukeyHSD(m)$"diet:age"
```

## Example

- Let's apply Tukey's to the model without the interaction term.
    
```{r}
m <- aov(birthweight ~ diet + age, data = data)
TukeyHSD(m)$diet
```

- Which diets are significantly different? Use $\alpha=0.05$.

## Example

- Let's apply Tukey's to the model without the interaction term.
    
```{r}
m <- aov(birthweight ~ diet + age, data = data)
TukeyHSD(m)$diet
```

- Which diets are significantly different? Use $\alpha=0.05$.

    - <font color="#db0b9d">Diet 1 and Diet 2 ($p = 0.019$).</font>
    - <font color="#db0b9d">Diet 1 and Diet 3 ($p = 0.004$).</font>

## Extra Example

- Recall the Palmer Penguin data.

- Let's now examine flipper length (mm) as a function of sex and species.

```{r}
penguins <- palmerpenguins::penguins
m <- lm(flipper_length_mm ~ sex + species + sex:species, data = penguins)
anova(m)
```

- Let's now do a live coding exercise -- see the .qmd file on Canvas.