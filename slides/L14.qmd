---
title: "Scatterplots and Correlation"
subtitle: "STA4173: Biostatistics"
execute:
  echo: true
  message: false
  warning: false
format: 
  revealjs:
    theme: uwf
    self-contained: true
    slide-number: false
    footer: "[STA4173 - Biostatistics](https://samanthaseals.github.io/STA4173)"
    width: 1600
    height: 900
    df-print: paged
    html-math-method: katex
editor: source
---

## Introduction

- Before today, we discussed methods for comparing continuous outcomes across two or more groups.

- We now will begin exploring the relationships between two continuous variables. 

- Today we will focus on data visualization and correlation.

- In the next lecture, we will quantify the relationship using linear regression.

## Scatterplot

- **Scatterplot or scatter diagram**:

    - A graph that shows the relationship between two quantitative variables measured on the same subject.
    
- Each individual in the dataset is represented by a point on the scatterplot. 

- The explanatory variable is on the $x$-axis and the response variable is on the $y$-axis.

- It is super important for us to plot the data! 

    - Plotting the data is a first step in identifying issues or potential relationships.
    
## Scatterplots

- **Positive relationship**:

    - As $x$ (explanatory variable) increases, $y$ (response variable) also increases.

- **Negative relationship**:

    - As $x$ (explanatory variable) increases, $y$ (response variable) decreases.

<center>
<img src="images/L14a.png" width = 950> <br>
<img src="images/L14b.png" width = 575>
</center>
    
## Example

- A golf pro wants to investigate the relation between the club-head speed of a golf club (measured in miles per hour) and the distance (in yards) that the ball will travel. 

- The pro uses a single model of club and ball, one golfer, and a clear, 70-degree day with no wind. 

- The pro records the club-head speed, measures the distance the ball travels, and collected the data below.

```{r}
library(tidyverse)
speed <- c(100, 102, 103, 101, 105, 100, 99, 105)
distance <- c(257, 264, 274, 266, 277, 263, 258, 275)
golf <- tibble(speed, distance)
head(golf, n=3)
```

## Example

- Like we have done before, we will graph using the `ggplot2` package.

<center>
```{r}
golf %>% ggplot(aes(x = speed, y = distance)) + 
  geom_point() # plot points
```
</center>

## Example

- Like we have done before, we will graph using the `ggplot2` package.

<center>
```{r}
golf %>% ggplot(aes(x = speed, y = distance)) + 
  geom_point(size = 3) + # plot points; make dots bigger
  labs(x = "Club Head Speed (mph)",
       y = "Distance (yards)") + # define labels 
  theme_bw() # change background color
```
</center>

## Correlation

- Creating the scatterplot allows us to visualize a potential relationship.

    - e.g., we know from the scatterplot for the golf data, as speed increases, distance increases.
    
- Now, let's talk about how to quantify that relationship.

    - Today, we will talk about correlation.
    
    - Next lecture, we will talk about regression.

## Correlation

- **Correlation**: A measure of the strength and direction of the linear relationship between two quantitative variables. 

    - $\rho$ represents the population correlation coefficient.
    
    - $r$ represents the sample correlation coefficient. 

- Correlation is bounded to $[-1, 1]$.

    - $r=-1$ represents perfect negative correlation.
    
    - $r=1$ represents perfect positive correlation.
    
    - $r=0$ represents no correlation.

## Correlation

- Pearson's correlation coefficient: $$r = \frac{\sum_{i=1}^n \left( \frac{x_i - \bar{x}}{s_x} \right)\left( \frac{y_i - \bar{y}}{s_y} \right)}{n-1}$$ where

    - $x_i$ is the *i*^th^ observation of $x$
    - $\bar{x}$ is the sample mean of $x$
    - $s_x$ is the sample standard deviation of $x$
    - $y_i$ is the *i*^th^ observation of $y$
    - $\bar{y}$ is the sample mean of $y$
    - $s_y$ is the sample standard deviation of $y$
    - $n$ is the sample size

## Correlation

- In R, we will use the [`cor()` function](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/cor) to find the correlation.

    - We can plug in the two specific variables we are interested in.
    
    - We can also plug in the dataset we are working with and all pairwise correlations will be reporeted. 
    
        - (This will be useful later!)

```{r, eval = FALSE}
cor(x, y) # request correlation between two values 
cor(data) # request correlation from a tibble (dataset)
```

## Example

- Let's find the correlation of the golf data.

- First, let's plug in the specific variables we are interested in.

```{r}
cor(golf$distance, golf$speed)
```

- Looking at the correlation coefficient for distance and speed, $r = 0.94$.

    - This is a strong positive correlation.

## Example

- Now, let's plug the whole dataset in.

```{r}
cor(golf)
```

- Notes:

    - The correlation between a variable and itself is 1.
    
        - We can see this above: $r_{\text{speed, speed}} = 1$ and $r_{\text{distance, distance}} = 1$.
    
    - The correlation between $x$ and $y$ is the same as the correlation between $y$ and $x$.
    
        - We can see this above: $r_{\text{speed, distance}} = r_{\text{distance, speed}}$ 
        
## Correlation

- An assumption for Pearson's correlation is that both $x$ and $y$ are normally distributed. 
- What do we do when we do not meet the normality assumption?

- **Spearman's Correlation**: A measure of the strength and direction of the monotone relationship between two variables. 

    - Spearman's correlation only assumes that the data is ordinal. 

    - It does not work for nominal data!

- Spearman's correlation is interpreted the same as Pearson's correlation.

- To find Spearman's correlation, the following algorithm is followed:

    1. Rank the $x$ and $y$ values. 
    
        - ($x$, $y$) $\to$ ($R_x$, $R_y$)
    
    2. Find Pearson's correlation for the ranked data. 
    
## Correlation

- We will again use the `cor()` function, but now we will specify Spearman.

```{r, eval = FALSE}
cor(x, y, method = "spearman") # request correlation between two values 
cor(data, method = "spearmaan") # request correlation from a tibble (dataset)
```

## Example

- Let's find the Spearman correlation of the golf data.

```{r}
cor(golf$distance, golf$speed, method = "spearman")
```

- Spearman's correlation is $r_{\text{S}} = 0.93$.

    - This is still a strong, positive correlation.

- Compare this to Pearson's correlation, $r = 0.94$.

    - In this dataset, Spearman's correlation is not vastly different.

    - While we see that Spearman's correlation is smaller than Pearson's correlation, this is not always the case.

## Conclusions

- Correlation allows us to quantify the relationship between two variables without units.

    - It does not matter if $x$ and $y$ have the same units! Correlation is unitless.
    
- The closer to $-1$ or $1$, the stronger the relationship.

    - As correlation approaches $-1$ or $1$, $x$ is better at predicting $y$.
    
- For fun: play [Guess the Correlation](http://www.guessthecorrelation.com).






